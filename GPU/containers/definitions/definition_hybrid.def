Bootstrap: docker
From: rockylinux:8

%files
    ./interconnect-benchmark-clean /opt

%environment
    # Point to OMPI binaries, libraries, man pages
    export OMPI_DIR=/opt/ompi
    export PATH="$OMPI_DIR/bin:$PATH"
    export LD_LIBRARY_PATH="$OMPI_DIR/lib:$LD_LIBRARY_PATH"
    export MANPATH="$OMPI_DIR/share/man:$MANPATH"
    # Work around a problem that UCX has with unprivileged user namespaces
    # See https://github.com/apptainer/apptainer/issues/769
    export UCX_POSIX_USE_PROC_LINK=n
    export LD_LIBRARY_PATH=/opt/ohpc/pub/mpi/ucx-ohpc/1.15.0/lib:/opt/ohpc/pub/mpi/libfabric/1.19.0/lib:/opt/ohpc/pub/mpi/ucx-ohpc/1.15.0/lib:$LD_LIBRARY_PATH
    export CUDA_PATH=/usr/local/cuda
    export PATH=/usr/local/cuda/bin:$PATH
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH

%post
    # docker pull nvidia/cuda:12.3.1-base-rockylinux8
    dnf -y install epel-release
    dnf -y update
    dnf -y install wget git gcc gcc-c++ make file gcc-gfortran bzip2 \
        dnf-plugins-core findutils librdmacm-devel dkms
    dnf config-manager --set-enabled powertools

#     # Install CUDA toolkit
    #wget https://developer.download.nvidia.com/compute/cuda/12.4.0/local_installers/cuda-repo-rhel8-12-4-local-12.4.0_550.54.14-1.x86_64.rpm -O /root/cuda.rpm
    wget https://developer.download.nvidia.com/compute/cuda/12.1.0/local_installers/cuda-repo-rhel8-12-1-local-12.1.0_530.30.02-1.x86_64.rpm -O /root/cuda.rpm
    rpm -i /root/cuda.rpm
    dnf -y install cuda --skip-broken

    # ================================================================
    export OMPI_DIR=/opt/ompi
    export OMPI_VERSION=4.1.5
    export OMPI_URL="https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-$OMPI_VERSION.tar.bz2"
    mkdir -p /var/tmp/ompi
    mkdir -p /opt

    cd /var/tmp/ompi
    wget https://github.com/openhpc/ohpc/releases/download/v2.4.GA/ohpc-release-2-1.el8.x86_64.rpm
    dnf install -y ./ohpc-release-2-1.el8.x86_64.rpm
    dnf -y update
    dnf -y install libfabric-ohpc libpsm2-devel ucx-ib-ohpc ucx-ohpc slurm-ohpc \
        slurm-devel-ohpc slurm-libpmi-ohpc \
	    ucx-rdmacm-ohpc ucx-ib-ohpc

    echo 1 
    ls /opt/ohpc/pub/mpi/
    echo 2 
    ls /opt/ohpc/pub/mpi/ucx-ohpc/
    export LD_LIBRARY_PATH=/opt/ohpc/pub/mpi/ucx-ohpc/1.15.0/lib:/opt/ohpc/pub/mpi/libfabric/1.19.0/lib:/opt/ohpc/pub/mpi/ucx-ohpc/1.15.0/lib:$LD_LIBRARY_PATH
    

    cd /var/tmp/ompi  
    wget -O openmpi-$OMPI_VERSION.tar.bz2 $OMPI_URL && tar -xjf openmpi-$OMPI_VERSION.tar.bz2
    cd /var/tmp/ompi/openmpi-$OMPI_VERSION 

    ./configure --prefix=$OMPI_DIR --with-pmi --with-pmix=internal --with-ucx=/opt/ohpc/pub/mpi/ucx-ohpc/1.15.0 \
        --without-verbs --with-libfabric=/opt/ohpc/pub/mpi/libfabric/1.19.0 \
        --enable-mpirun-prefix-by-default --with-slurm \
        --with-ofi=/opt/ohpc/pub/mpi/libfabric/1.19.0 \
        --with-pmi-libdir=/usr/lib64 \
        --with-cuda=/usr/local/cuda --enable-cuda-runtime-linking 



    make -j8 install
    cd / && rm -rf /var/tmp/ompi

    export PATH=$OMPI_DIR/bin:$PATH
    export LD_LIBRARY_PATH=$OMPI_DIR/lib:$LD_LIBRARY_PATH

    echo "Installing NCCL"
    dnf config-manager --add-repo http://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/cuda-rhel8.repo
    yum install -y libnccl libnccl-devel libnccl-static

    echo "Compiling the application..."
    # cd /opt/interconnect-benchmark/ && make -f Makefile.SNELLIUS
    echo "Compiling the MPI TESTS..."
    # cd /opt/cloud_noise/benchmarks/mpi_tests && mpicc helloworld.c -o 	hello
    # cd /opt/cloud_noise/benchmarks/mpi_tests && mpicc ring.c -o comm_test

